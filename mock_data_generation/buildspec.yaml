version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
  build:
    commands:
      - set -eux
      # show repo root so you can confirm paths
      - echo "Repo root:" && pwd && ls -la
      # move into the folder that contains your handler
      - cd mock_data_generation
      - echo "In mock_data_generation:" && pwd && ls -la
      # ensure the file exists
      - test -f lambda_function.py
      # create the deployment zip with the handler at the ZIP ROOT
      - zip -r9 package.zip lambda_function.py
      # optional: list zip contents to verify
      - unzip -l package.zip

  post_build:
    commands:
      # cd does NOT persist across phasesâ€”cd again
      - cd mock_data_generation
      - echo "Updating Lambda function code..."
      - aws lambda update-function-code \
          --function-name doordash_input_json_files \
          --zip-file fileb://package.zip


# version: 0.2
# phases:
#   build:
#     commands:
#     - mkdir lib
#     - echo Building the deployment package...
#     - cd lib
#     - zip -g -r9 mock-json-data-deployment-package.zip lambda_function.py
#   post_build:
#     commands:
#     - echo Build completed on `date`
#     - aws s3 cp mock-json-data-deployment-package.zip s3://doordash-delivery-data-code-base
#     - echo Now updatigng the lambda function code...
#     - aws lambda update-function-code --function-name doordash_input_json_files --s3-bucket doordash-delivery-data-code-base --s3-key mock-json-data-deployment-package.zip
  